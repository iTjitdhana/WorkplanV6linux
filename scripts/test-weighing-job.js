// р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Зр╕▓р╕Щр╕Хр╕зр╕Зр╕кр╕╣р╕Хр╕гр╣Др╕Ыр╕вр╕▒р╕З backend
async function testWeighingJob() {
  console.log('ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Зр╕▓р╕Щр╕Хр╕зр╕Зр╕кр╕╣р╕Хр╕г...');
  
  const testData = {
    process_number: 1,
    status: 'start',
    timestamp: new Date().toISOString()
  };

  try {
    console.log('ЁЯУб р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Ыр╕вр╕▒р╕З backend...');
    console.log('ЁЯУЛ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕кр╣Ир╕З:', testData);
    
    const response = await fetch('http://192.168.0.94:3102/api/logs', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(testData),
    });
    
    console.log('ЁЯУК Status:', response.status);
    console.log('ЁЯУК Status Text:', response.statusText);
    
    const result = await response.text();
    console.log('ЁЯУД Response:', result);
    
    if (response.ok) {
      console.log('тЬЕ р╕Зр╕▓р╕Щр╕Хр╕зр╕Зр╕кр╕╣р╕Хр╕гр╕Чр╕│р╕Зр╕▓р╕Щр╣Др╕Фр╣Й!');
    } else {
      console.log('тЭМ р╕Зр╕▓р╕Щр╕Хр╕зр╕Зр╕кр╕╣р╕Хр╕гр╕бр╕╡р╕Ыр╕▒р╕Нр╕лр╕▓');
    }
    
  } catch (error) {
    console.log('тЭМ Error:', error.message);
  }
}

// р╕Чр╕Фр╕кр╕нр╕Ър╕Ьр╣Ир╕▓р╕Щ frontend API
async function testFrontendWeighingJob() {
  console.log('ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Ьр╣Ир╕▓р╕Щ frontend API...');
  
  const testData = {
    process_number: 1,
    status: 'start',
    timestamp: new Date().toISOString()
  };

  try {
    console.log('ЁЯУб р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Ыр╕вр╕▒р╕З frontend API...');
    console.log('ЁЯУЛ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕кр╣Ир╕З:', testData);
    
    const response = await fetch('http://localhost:3012/api/logs', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(testData),
    });
    
    console.log('ЁЯУК Status:', response.status);
    console.log('ЁЯУК Status Text:', response.statusText);
    
    const result = await response.text();
    console.log('ЁЯУД Response:', result);
    
    if (response.ok) {
      console.log('тЬЕ Frontend API р╕Чр╕│р╕Зр╕▓р╕Щр╣Др╕Фр╣Й!');
    } else {
      console.log('тЭМ Frontend API р╕бр╕╡р╕Ыр╕▒р╕Нр╕лр╕▓');
    }
    
  } catch (error) {
    console.log('тЭМ Error:', error.message);
  }
}

// р╕гр╕▒р╕Щр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ
console.log('ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕бр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ...');
testWeighingJob().then(() => {
  console.log('\n---\n');
  return testFrontendWeighingJob();
}).then(() => {
  console.log('\nтЬЕ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ');
});
